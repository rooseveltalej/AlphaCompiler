// Generated from /Users/rooseveltalej/IdeaProjects/AlphaCompiler/AlphaLexer.g4 by ANTLR 4.13.2
package parser.generated;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class AlphaLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		IF=1, THEN=2, ELSE=3, WHILE=4, DO=5, LET=6, IN=7, BEGIN=8, END=9, CONST=10, 
		VAR=11, SEMMICOLON=12, ASSIGN=13, LEFTP=14, RIGHTP=15, COLON=16, VIR=17, 
		ADD=18, SUB=19, MULT=20, DIV=21, MOD=22, EQEQ=23, NOTEQ=24, LESS=25, GREATER=26, 
		LESSEQ=27, MOREEQ=28, ID=29, NUMLiteral=30, LINE_COMMENT=31, WS=32;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"IF", "THEN", "ELSE", "WHILE", "DO", "LET", "IN", "BEGIN", "END", "CONST", 
			"VAR", "SEMMICOLON", "ASSIGN", "LEFTP", "RIGHTP", "COLON", "VIR", "ADD", 
			"SUB", "MULT", "DIV", "MOD", "EQEQ", "NOTEQ", "LESS", "GREATER", "LESSEQ", 
			"MOREEQ", "ID", "NUMLiteral", "LETTER", "DIGIT", "LINE_COMMENT", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'if'", null, "'else'", null, "'do'", "'let'", "'in'", "'begin'", 
			"'end'", "'const'", "'var'", "';'", "':='", "'('", "')'", "':'", "'~'", 
			"'+'", "'-'", "'*'", "'/'", "'%'", "'=='", "'!='", "'<'", "'>'", "'<='", 
			"'>='"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "IF", "THEN", "ELSE", "WHILE", "DO", "LET", "IN", "BEGIN", "END", 
			"CONST", "VAR", "SEMMICOLON", "ASSIGN", "LEFTP", "RIGHTP", "COLON", "VIR", 
			"ADD", "SUB", "MULT", "DIV", "MOD", "EQEQ", "NOTEQ", "LESS", "GREATER", 
			"LESSEQ", "MOREEQ", "ID", "NUMLiteral", "LINE_COMMENT", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public AlphaLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "AlphaLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000 \u00cc\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0001\u0000\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\b\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001\t\u0001\t\u0001"+
		"\t\u0001\t\u0001\n\u0001\n\u0001\n\u0001\n\u0001\u000b\u0001\u000b\u0001"+
		"\f\u0001\f\u0001\f\u0001\r\u0001\r\u0001\u000e\u0001\u000e\u0001\u000f"+
		"\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0011\u0001\u0011\u0001\u0012"+
		"\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0014\u0001\u0014\u0001\u0015"+
		"\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0016\u0001\u0017\u0001\u0017"+
		"\u0001\u0017\u0001\u0018\u0001\u0018\u0001\u0019\u0001\u0019\u0001\u001a"+
		"\u0001\u001a\u0001\u001a\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001c"+
		"\u0001\u001c\u0003\u001c\u00a1\b\u001c\u0001\u001c\u0001\u001c\u0001\u001c"+
		"\u0005\u001c\u00a6\b\u001c\n\u001c\f\u001c\u00a9\t\u001c\u0001\u001d\u0001"+
		"\u001d\u0005\u001d\u00ad\b\u001d\n\u001d\f\u001d\u00b0\t\u001d\u0001\u001e"+
		"\u0001\u001e\u0001\u001f\u0001\u001f\u0001 \u0001 \u0001 \u0001 \u0005"+
		" \u00ba\b \n \f \u00bd\t \u0001 \u0003 \u00c0\b \u0001 \u0001 \u0001 "+
		"\u0001 \u0001!\u0004!\u00c7\b!\u000b!\f!\u00c8\u0001!\u0001!\u0001\u00bb"+
		"\u0000\"\u0001\u0001\u0003\u0002\u0005\u0003\u0007\u0004\t\u0005\u000b"+
		"\u0006\r\u0007\u000f\b\u0011\t\u0013\n\u0015\u000b\u0017\f\u0019\r\u001b"+
		"\u000e\u001d\u000f\u001f\u0010!\u0011#\u0012%\u0013\'\u0014)\u0015+\u0016"+
		"-\u0017/\u00181\u00193\u001a5\u001b7\u001c9\u001d;\u001e=\u0000?\u0000"+
		"A\u001fC \u0001\u0000\u0002\u0002\u0000AZaz\u0003\u0000\t\n\r\r  \u00d0"+
		"\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001\u0000\u0000\u0000"+
		"\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001\u0000\u0000\u0000"+
		"\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000\u0000\u0000\u0000"+
		"\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000\u0000\u0000\u0011"+
		"\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000\u0000\u0000\u0015"+
		"\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000\u0000\u0000\u0019"+
		"\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000\u0000\u0000\u001d"+
		"\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000\u0000\u0000!\u0001"+
		"\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000%\u0001\u0000\u0000"+
		"\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001\u0000\u0000\u0000"+
		"\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000\u0000\u0000/"+
		"\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u00003\u0001\u0000"+
		"\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u00007\u0001\u0000\u0000\u0000"+
		"\u00009\u0001\u0000\u0000\u0000\u0000;\u0001\u0000\u0000\u0000\u0000A"+
		"\u0001\u0000\u0000\u0000\u0000C\u0001\u0000\u0000\u0000\u0001E\u0001\u0000"+
		"\u0000\u0000\u0003H\u0001\u0000\u0000\u0000\u0005N\u0001\u0000\u0000\u0000"+
		"\u0007S\u0001\u0000\u0000\u0000\tY\u0001\u0000\u0000\u0000\u000b\\\u0001"+
		"\u0000\u0000\u0000\r`\u0001\u0000\u0000\u0000\u000fc\u0001\u0000\u0000"+
		"\u0000\u0011i\u0001\u0000\u0000\u0000\u0013m\u0001\u0000\u0000\u0000\u0015"+
		"s\u0001\u0000\u0000\u0000\u0017w\u0001\u0000\u0000\u0000\u0019y\u0001"+
		"\u0000\u0000\u0000\u001b|\u0001\u0000\u0000\u0000\u001d~\u0001\u0000\u0000"+
		"\u0000\u001f\u0080\u0001\u0000\u0000\u0000!\u0082\u0001\u0000\u0000\u0000"+
		"#\u0084\u0001\u0000\u0000\u0000%\u0086\u0001\u0000\u0000\u0000\'\u0088"+
		"\u0001\u0000\u0000\u0000)\u008a\u0001\u0000\u0000\u0000+\u008c\u0001\u0000"+
		"\u0000\u0000-\u008e\u0001\u0000\u0000\u0000/\u0091\u0001\u0000\u0000\u0000"+
		"1\u0094\u0001\u0000\u0000\u00003\u0096\u0001\u0000\u0000\u00005\u0098"+
		"\u0001\u0000\u0000\u00007\u009b\u0001\u0000\u0000\u00009\u00a0\u0001\u0000"+
		"\u0000\u0000;\u00aa\u0001\u0000\u0000\u0000=\u00b1\u0001\u0000\u0000\u0000"+
		"?\u00b3\u0001\u0000\u0000\u0000A\u00b5\u0001\u0000\u0000\u0000C\u00c6"+
		"\u0001\u0000\u0000\u0000EF\u0005i\u0000\u0000FG\u0005f\u0000\u0000G\u0002"+
		"\u0001\u0000\u0000\u0000HI\u0005w\u0000\u0000IJ\u0005h\u0000\u0000JK\u0005"+
		"i\u0000\u0000KL\u0005l\u0000\u0000LM\u0005e\u0000\u0000M\u0004\u0001\u0000"+
		"\u0000\u0000NO\u0005e\u0000\u0000OP\u0005l\u0000\u0000PQ\u0005s\u0000"+
		"\u0000QR\u0005e\u0000\u0000R\u0006\u0001\u0000\u0000\u0000ST\u0005w\u0000"+
		"\u0000TU\u0005h\u0000\u0000UV\u0005i\u0000\u0000VW\u0005l\u0000\u0000"+
		"WX\u0005e\u0000\u0000X\b\u0001\u0000\u0000\u0000YZ\u0005d\u0000\u0000"+
		"Z[\u0005o\u0000\u0000[\n\u0001\u0000\u0000\u0000\\]\u0005l\u0000\u0000"+
		"]^\u0005e\u0000\u0000^_\u0005t\u0000\u0000_\f\u0001\u0000\u0000\u0000"+
		"`a\u0005i\u0000\u0000ab\u0005n\u0000\u0000b\u000e\u0001\u0000\u0000\u0000"+
		"cd\u0005b\u0000\u0000de\u0005e\u0000\u0000ef\u0005g\u0000\u0000fg\u0005"+
		"i\u0000\u0000gh\u0005n\u0000\u0000h\u0010\u0001\u0000\u0000\u0000ij\u0005"+
		"e\u0000\u0000jk\u0005n\u0000\u0000kl\u0005d\u0000\u0000l\u0012\u0001\u0000"+
		"\u0000\u0000mn\u0005c\u0000\u0000no\u0005o\u0000\u0000op\u0005n\u0000"+
		"\u0000pq\u0005s\u0000\u0000qr\u0005t\u0000\u0000r\u0014\u0001\u0000\u0000"+
		"\u0000st\u0005v\u0000\u0000tu\u0005a\u0000\u0000uv\u0005r\u0000\u0000"+
		"v\u0016\u0001\u0000\u0000\u0000wx\u0005;\u0000\u0000x\u0018\u0001\u0000"+
		"\u0000\u0000yz\u0005:\u0000\u0000z{\u0005=\u0000\u0000{\u001a\u0001\u0000"+
		"\u0000\u0000|}\u0005(\u0000\u0000}\u001c\u0001\u0000\u0000\u0000~\u007f"+
		"\u0005)\u0000\u0000\u007f\u001e\u0001\u0000\u0000\u0000\u0080\u0081\u0005"+
		":\u0000\u0000\u0081 \u0001\u0000\u0000\u0000\u0082\u0083\u0005~\u0000"+
		"\u0000\u0083\"\u0001\u0000\u0000\u0000\u0084\u0085\u0005+\u0000\u0000"+
		"\u0085$\u0001\u0000\u0000\u0000\u0086\u0087\u0005-\u0000\u0000\u0087&"+
		"\u0001\u0000\u0000\u0000\u0088\u0089\u0005*\u0000\u0000\u0089(\u0001\u0000"+
		"\u0000\u0000\u008a\u008b\u0005/\u0000\u0000\u008b*\u0001\u0000\u0000\u0000"+
		"\u008c\u008d\u0005%\u0000\u0000\u008d,\u0001\u0000\u0000\u0000\u008e\u008f"+
		"\u0005=\u0000\u0000\u008f\u0090\u0005=\u0000\u0000\u0090.\u0001\u0000"+
		"\u0000\u0000\u0091\u0092\u0005!\u0000\u0000\u0092\u0093\u0005=\u0000\u0000"+
		"\u00930\u0001\u0000\u0000\u0000\u0094\u0095\u0005<\u0000\u0000\u00952"+
		"\u0001\u0000\u0000\u0000\u0096\u0097\u0005>\u0000\u0000\u00974\u0001\u0000"+
		"\u0000\u0000\u0098\u0099\u0005<\u0000\u0000\u0099\u009a\u0005=\u0000\u0000"+
		"\u009a6\u0001\u0000\u0000\u0000\u009b\u009c\u0005>\u0000\u0000\u009c\u009d"+
		"\u0005=\u0000\u0000\u009d8\u0001\u0000\u0000\u0000\u009e\u00a1\u0005_"+
		"\u0000\u0000\u009f\u00a1\u0001\u0000\u0000\u0000\u00a0\u009e\u0001\u0000"+
		"\u0000\u0000\u00a0\u009f\u0001\u0000\u0000\u0000\u00a1\u00a2\u0001\u0000"+
		"\u0000\u0000\u00a2\u00a7\u0003=\u001e\u0000\u00a3\u00a6\u0003=\u001e\u0000"+
		"\u00a4\u00a6\u0003?\u001f\u0000\u00a5\u00a3\u0001\u0000\u0000\u0000\u00a5"+
		"\u00a4\u0001\u0000\u0000\u0000\u00a6\u00a9\u0001\u0000\u0000\u0000\u00a7"+
		"\u00a5\u0001\u0000\u0000\u0000\u00a7\u00a8\u0001\u0000\u0000\u0000\u00a8"+
		":\u0001\u0000\u0000\u0000\u00a9\u00a7\u0001\u0000\u0000\u0000\u00aa\u00ae"+
		"\u0003?\u001f\u0000\u00ab\u00ad\u0003?\u001f\u0000\u00ac\u00ab\u0001\u0000"+
		"\u0000\u0000\u00ad\u00b0\u0001\u0000\u0000\u0000\u00ae\u00ac\u0001\u0000"+
		"\u0000\u0000\u00ae\u00af\u0001\u0000\u0000\u0000\u00af<\u0001\u0000\u0000"+
		"\u0000\u00b0\u00ae\u0001\u0000\u0000\u0000\u00b1\u00b2\u0007\u0000\u0000"+
		"\u0000\u00b2>\u0001\u0000\u0000\u0000\u00b3\u00b4\u000209\u0000\u00b4"+
		"@\u0001\u0000\u0000\u0000\u00b5\u00b6\u0005/\u0000\u0000\u00b6\u00b7\u0005"+
		"/\u0000\u0000\u00b7\u00bb\u0001\u0000\u0000\u0000\u00b8\u00ba\t\u0000"+
		"\u0000\u0000\u00b9\u00b8\u0001\u0000\u0000\u0000\u00ba\u00bd\u0001\u0000"+
		"\u0000\u0000\u00bb\u00bc\u0001\u0000\u0000\u0000\u00bb\u00b9\u0001\u0000"+
		"\u0000\u0000\u00bc\u00bf\u0001\u0000\u0000\u0000\u00bd\u00bb\u0001\u0000"+
		"\u0000\u0000\u00be\u00c0\u0005\r\u0000\u0000\u00bf\u00be\u0001\u0000\u0000"+
		"\u0000\u00bf\u00c0\u0001\u0000\u0000\u0000\u00c0\u00c1\u0001\u0000\u0000"+
		"\u0000\u00c1\u00c2\u0005\n\u0000\u0000\u00c2\u00c3\u0001\u0000\u0000\u0000"+
		"\u00c3\u00c4\u0006 \u0000\u0000\u00c4B\u0001\u0000\u0000\u0000\u00c5\u00c7"+
		"\u0007\u0001\u0000\u0000\u00c6\u00c5\u0001\u0000\u0000\u0000\u00c7\u00c8"+
		"\u0001\u0000\u0000\u0000\u00c8\u00c6\u0001\u0000\u0000\u0000\u00c8\u00c9"+
		"\u0001\u0000\u0000\u0000\u00c9\u00ca\u0001\u0000\u0000\u0000\u00ca\u00cb"+
		"\u0006!\u0000\u0000\u00cbD\u0001\u0000\u0000\u0000\b\u0000\u00a0\u00a5"+
		"\u00a7\u00ae\u00bb\u00bf\u00c8\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}